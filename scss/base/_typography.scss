// ===================================================================================
// ████████ ███████ ██   ██ ████████      ██████ ██████   ██████  ██████
//    ██    ██       ██ ██     ██        ██      ██   ██ ██    ██ ██   ██
//    ██    █████     ███      ██        ██      ██████  ██    ██ ██████
//    ██    ██       ██ ██     ██        ██      ██   ██ ██    ██ ██
//    ██    ███████ ██   ██    ██         ██████ ██   ██  ██████  ██
// ===================================================================================
@mixin text-crop(
  $line-height: 1.3,
  $top-adjustment: 0px,
  $bottom-adjustment: 0
) {
  // Configured in Step 1
  $top-crop: 11;
  $bottom-crop: 7;
  $crop-font-size: 36;
  $crop-line-height: 1.2;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: max(
      ($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
      0
    ) / $crop-font-size;
  $dynamic-bottom-crop: max(
      (
        $bottom-crop + ($line-height - $crop-line-height) *
          ($crop-font-size / 2)
      ),
      0
    ) / $crop-font-size;

  // Mixin output
  line-height: $line-height;

  &::after,
  &::before {
    content: "";
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}
// Mixin generated at: http://text-crop.eightshapes.com/?typeface-selection=custom-font&typeface=Lato&custom-typeface-name=Cognizant%20Sans&custom-typeface-url=&custom-typeface-weight=400&custom-typeface-style=normal&weight-and-style=100&size=36&line-height=1.2&top-crop=11&bottom-crop=7

/* Usage Examples
    .my-level-1-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 48px;
        margin: 0 0 0 16px;
    }

    .my-level-2-heading-class {
        @include text-crop; // Will use default line height of 1.3
        font-size: 32px; // Don't need to change any settings, will work with any font size automatically
        margin: 0 0 0 16px;
    }

    .my-body-copy-class {
        @include text-crop($line-height: 2); // Larger line height desired, set the line height via the mixin
        font-size: 16px;
    }

    // Sometimes depending on the font-size, the rendering, the browser, etc. you may need to tweak the output.
    // You can adjust the top and bottom cropping when invoking the component using the $top-adjustment and $bottom-adjustment settings

    .slight-adjustment-needed {
        @include text-crop($top-adjustment: -0.5px, $bottom-adjustment: 2px);
        font-size: 17px;
    }

    .dont-do-this {
        @include text-crop;
        font-size: 16px;
        line-height: 3; // DO NOT set line height outside of the mixin, the mixin needs the line height value to calculate the crop correctly
    }
*/
// -----  End of TEXT CROP  -----------------------------------

// ===================================================================================
// ████████ ██    ██ ██████   ██████   ██████  ██████   █████  ██████  ██   ██ ██    ██
//    ██     ██  ██  ██   ██ ██    ██ ██       ██   ██ ██   ██ ██   ██ ██   ██  ██  ██
//    ██      ████   ██████  ██    ██ ██   ███ ██████  ███████ ██████  ███████   ████
//    ██       ██    ██      ██    ██ ██    ██ ██   ██ ██   ██ ██      ██   ██    ██
//    ██       ██    ██       ██████   ██████  ██   ██ ██   ██ ██      ██   ██    ██
// ===================================================================================

// // https://gist.github.com/fsimmons/e9e64dc2f6f375dbe446c9994022299b
// // https://utopia.fyi/calculator?c=320,16,1.2,1200,20,1.333,5,2,

// ===================================================================================
// ██████  ███████ ███████
// ██   ██ ██      ██
// ██████  █████   ███████
// ██   ██ ██           ██
// ██   ██ ██      ███████
// ===================================================================================
// @import "../plugins/rfs";
// -----  End of RFS  -----------------------------------

.text-crop {
  // @include lhCrop(1.2, 0.75); //using Roboto font family
  @include text-crop;
}

// ===================================================================================
// ██████  ███████ ███████  █████  ██    ██ ██   ████████
// ██   ██ ██      ██      ██   ██ ██    ██ ██      ██
// ██   ██ █████   █████   ███████ ██    ██ ██      ██
// ██   ██ ██      ██      ██   ██ ██    ██ ██      ██
// ██████  ███████ ██      ██   ██  ██████  ███████ ██
// ===================================================================================
$tiny-font-size: 60%;

body {
  font-feature-settings: "ss01";
}

@mixin h1 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 36px, 84px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 36px, 92.4px);
  font-weight: $global-weight-bold;
  font-feature-settings: "ss00";
}
.h1,
h1 {
  @include h1;
}

@mixin h2 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 32px, 63px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 32px, 69.3px);
  font-weight: $global-weight-bold;
  font-feature-settings: "ss00";
}
.h2,
h2 {
  @include h2;
}

@mixin h3 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 28px, 47px);
  font-weight: $global-weight-bold;
  font-feature-settings: "ss00";
}
.h3,
h3 {
  @include h3;
}

@mixin h4 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 25px, 36px);
  font-weight: 300;
  font-feature-settings: "ss00";
  color: var(--heading-color);
}
.h4,
h4 {
  @include h4;
}

@mixin h5 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 22px, 27px);
  font-weight: $global-weight-normal;
  font-feature-settings: "ss00";
  color: var(--heading-color);
}
.h5,
h5 {
  @include h5;
}

@mixin h6 {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 20px, 20px);
  font-weight: $global-weight-bold;
  font-feature-settings: "ss01";
  color: var(--heading-color);
}
.h6,
h6 {
  @include h6;
}

.p,
p {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 16px, 20px);

  &:last-of-type {
    // margin-bottom: 0;
  }

  a:last-of-type {
    // margin-bottom: 0;
    // margin-bottom: $paragraph-margin-bottom;
  }
}

// p:last-of-type {
//   margin-bottom: 0;
// }

.extra-large {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 40px, 112px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 1, 1.1);
}

.super-size {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 48px, 140px);
  @include fluidSize(line-height, 320px, $cog-bp--desktop-xl, 1, 1.1);
}

.small {
  @include fluidSize(font-size, 320px, $cog-bp--desktop, 12px, 15px);
}

.tiny {
  @include fluidSize(font-size, 320px, $cog-bp--desktop, 9px, 12px);
}

code {
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 13px, 17px);
}

// ===================================================================================
// ██    ██ ████████ ██ ██      ██ ████████ ██ ███████ ███████
// ██    ██    ██    ██ ██      ██    ██    ██ ██      ██
// ██    ██    ██    ██ ██      ██    ██    ██ █████   ███████
// ██    ██    ██    ██ ██      ██    ██    ██ ██           ██
//  ██████     ██    ██ ███████ ██    ██    ██ ███████ ███████
// ===================================================================================
.lh0 {
  line-height: 0;
}

.lh1 {
  line-height: 1;
}

.lh2 {
  line-height: 2;
}

$font-weights-only: ("normal" "normal", "light" 300, "bold" "bold");

@each $font-style, $font-weight in $font-weights-only {
  %text-#{$font-style},
  .text-#{$font-style} {
    font-weight: #{$font-weight} !important;
  }
}

$font-two-styles: (
  "light-italic" 300 "italic",
  "bold-italic" "bold" "italic",
  "normal-light" "normal" "normal"
);
@each $font-style, $font-weight, $font-variation in $font-two-styles {
  .text-#{$font-style} {
    font-weight: #{$font-weight};
    font-style: #{$font-variation} !important;
  }
}

$font-transforms: ("caps" "uppercase", "title" "capitalize");
@each $font-style, $font-transform in $font-transforms {
  .text-#{$font-style} {
    text-transform: #{$font-transform};
  }
}

$text-alignments: ("left", "right", "center");
@each $size in $breakpoint-classes {
  @include breakpoint($size) {
    @each $alignment in $text-alignments {
      @if $size != $-zf-zero-breakpoint {
        .#{$size}-text-#{$alignment} {
          text-align: #{$alignment};
        }
      } @else {
        .text-#{$alignment} {
          text-align: #{$alignment};
        }
      }
    }
  }
}

.text-spacing-1 {
  letter-spacing: 1px;
}

.text-spacing-2 {
  letter-spacing: 2px;
}

.text-spacing-3 {
  letter-spacing: 3px;
}

.text-spacing-4 {
  letter-spacing: 4px;
}

// ======================================================================
// ████████ ███████ ██   ██ ████████      ██████  ██████  ██       ██████  ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██ ██
//    ██    █████     ███      ██        ██      ██    ██ ██      ██    ██ ██████  ███████
//    ██    ██       ██ ██     ██        ██      ██    ██ ██      ██    ██ ██   ██      ██
//    ██    ███████ ██   ██    ██         ██████  ██████  ███████  ██████  ██   ██ ███████
// ======================================================================
@each $size in $breakpoint-classes {
  @include breakpoint($size) {
    @each $color-name, $color in $text-color-palette {
      @if $size != $-zf-zero-breakpoint {
        .#{$size}-text-#{$color-name} {
          color: $color;
          //change the heading color depends on parent's class text color
          --heading-color: #{$color};
        }
      } @else {
        // .text-#{$color-name}, .text-#{$color-name}.card, a:link.text-#{$color-name}:not(.button), a.text-#{$color-name}:not(.button)  {
        //card level with text color issue fixes
        .text-#{$color-name} {
          // color: $color; adding important for textcolor in anchor tag
          color: $color;
          //change the color depends on parent's class text color
          --heading-color: #{$color};
        }
      }
    }
  }
}

// ======================================================================
// WHITE TEXT ON SPECIFIC BACKGROUNDS
// ======================================================================
.text-wrap {
  white-space: normal;
}

.text-nowrap {
  white-space: nowrap;
}

.hanging-punctuation {
  text-indent: -0.5em;
}

.gradient-transparent-white-25 {
  background: linear-gradient(to right, rgba($white, 0), rgba($white, 1) 25%);
}

.gradient-transparent-black-25 {
  background: linear-gradient(to right, rgba($black, 0), rgba($black, 1) 25%);
}
/* ----  End of TYPOGRAPHY;  ---------------------------- */

/* ====================================================================================

██████  ██       ██████   ██████ ██   ██  ██████  ██    ██  ██████  ████████ ███████ ███████
██   ██ ██      ██    ██ ██      ██  ██  ██    ██ ██    ██ ██    ██    ██    ██      ██
██████  ██      ██    ██ ██      █████   ██    ██ ██    ██ ██    ██    ██    █████   ███████
██   ██ ██      ██    ██ ██      ██  ██  ██ ▄▄ ██ ██    ██ ██    ██    ██    ██           ██
██████  ███████  ██████   ██████ ██   ██  ██████   ██████   ██████     ██    ███████ ███████

==================================================================================== */
blockquote {
  padding: 3.75rem 0;
  text-align: center;
  color: $accent2-medium;
  border: 1px solid $accent2-light;
  border-right: 0;
  border-left: 0;
  font-weight: bold;
  font-style: italic;

  @include h5;

  cite {
    margin-top: 1.875rem;
    font-weight: normal;
    color: $gray-dark;
  }
}

/* -----  End of BLOCKQUOTES  ---------- */

/* ==================================================================================================
██      ██ ███████ ████████ ███████
██      ██ ██         ██    ██
██      ██ ███████    ██    ███████
██      ██      ██    ██         ██
███████ ██ ███████    ██    ███████
========================================================================================= */
ul {
  // margin-bottom: 2rem;
  @include fluidSize(font-size, 320px, $cog-bp--desktop-xl, 16px, 20px);

  &.inside {
    list-style-position: inside;
  }

  &.circle {
    list-style-type: circle;
  }

  &.square {
    list-style-type: square;
  }

  &.collapse li {
    margin-bottom: 0;
  }
}

li {
  margin-bottom: 1rem;
}

li:last-of-type {
  // margin-bottom: 0;
}

li ol,
li ul {
  margin-top: 1rem;
}
@include breakpoint(medium up) {
  ul.inline-list li {
    display: inline-block;
    margin: 0 1rem 0 0;
  }
}

dl dt {
  margin-top: 1rem;
  font-weight: bold;
}
/* ----  End of LISTS  ---------------------------------- */

/* ====================================================================================

████████ ███████ ██   ██ ████████     ███████ ██   ██  █████  ██████   ██████  ██     ██
   ██    ██       ██ ██     ██        ██      ██   ██ ██   ██ ██   ██ ██    ██ ██     ██
   ██    █████     ███      ██        ███████ ███████ ███████ ██   ██ ██    ██ ██  █  ██
   ██    ██       ██ ██     ██             ██ ██   ██ ██   ██ ██   ██ ██    ██ ██ ███ ██
   ██    ███████ ██   ██    ██        ███████ ██   ██ ██   ██ ██████   ██████   ███ ███

==================================================================================== */
.text-shadow {
  text-shadow: 0 0 3rem rgba($black, 0.65);
}

.text-shadow1 {
  text-shadow: 0 0 1rem rgba($black, 0.85);
}

.text-shadow4 {
  text-shadow: 0 0 0.5rem rgba(0, 0, 0, 1), 0 0 0.3rem rgba(0, 0, 0, 0.6),
    0 0 0.2rem rgba(0, 0, 0, 0.3);
}
// -----  End of TEXT SHADOW  ----------

// /* Opentype features */
// --otf-angularG: "ss01"; /*•Angular G*/
// --otf-outstokeA•: "ss02"; /*•Outstroke A-*/
// --otf-sweepingy "ss03"; /* Sweeping Y•*/
// --otf-alt4 : "ss04"; /* Alt figure 4*/
// --otf-kurrentKORk: "ss05"; /* Kurrent KORk */
// --otf-altAmpersand: "ss06"; /* Alt ampersand */
// --otf-alt7: "ss07"; /*-Alt Figure 7*/
// --otf-schoolbook: "Ss08"; /* Schoolbook + rounded ligatures */
// --otf-blunt: "ss09" /* Blunt */
// --otf-collatedLigatures: "ss10"; /* Collated ligatures */
// --otf-caseSensitive: "case"; /* Collated ligatures */
// --otf-tabularNumbers: "tnum"; /* Tabular numbers */
// --otf-superior: "sups"; /* Superior */
// --otf-numerator: "numr"; /*•Numerator•*/
// --otf-denominator: "dnom" ow../*•Denominator */
// --otf-fractions: "frac"; •o.....//* Fractions */
// --otf-ordinals: "ordn" /*•Ordinals */
// --otf-slashed0: "zero" /* Slashed Zero */
// --otf-kerning: "kern"; /*•Kerning */
// --otf-commonLigatures: "liga"; /*•Common Ligatures */
// --otf-contextLigatures: "calt"; /*•Contextual Ligatures */
// --otf-discretLigatures: "dlig"; /* Discretionary Ligatures */

// font-variant-ligatures: discretionary-ligatures;
// font-feature-settings: var(--otf-angular) 1, var(--otf-sweepingY) 1, var(--otf-alt4) 1, var(--otf-altAmpersand) 1, var(--otf-kerning) 1, var(--otf-commonLigatures) 1, var(--otf-contextLigatures) 1, var(--otf-discretLigatures) 1;
